{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>In this workshop you will learn how to use the Amazon Inspector Network Reachability report to validate your network configuration without needing a deep background in networking. You will use this report to find misconfigurations that may result in unintended behaviors and unexpected vulnerabilities. You will finish the workshop by remediating these vulnerabilities by integrating the findings of Amazon Inspector with other AWS services.</p> <ul> <li> <p>Level: Intermediate</p> </li> <li> <p>Duration: 1:30 - 2:00 hours</p> </li> <li> <p>CSF Functions: Detect, Respond</p> </li> <li> <p>CAF Components: Detective, Responsive</p> </li> </ul>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ol> <li>You will need an AWS account for this workshop and administrative credentials.</li> <li>You should be familiar with AWS core services such as Amazon EC2, Amazon VPC, and AWS CloudFormation. You should also be comfortable using the AWS console.</li> <li>Run this workshop in the eu-west-1 region.</li> <li>You must have an EC2 key pair in the region eu-west-1. Create one in the AWS management console and download it to your computer.</li> </ol>"},{"location":"#workshop-scenario","title":"Workshop Scenario","text":"<p>Example Corp. has been in AWS for a few months and is moving its first few workloads into AWS. The first workload to move was an external website with a database back end. Example Corp.\u2019s security team insisted administrative access to servers must be through a set of bastion hosts in a separate VPC. Recently, a developer has created a public proof of concept for a new highly available web service and connected it to the environment without going through all the proper change management. The various IT stakeholders have been working off the following untested assumptions:</p> <p>Assumption 1. Instances in private subnets are not accessible from the internet</p> <p>Assumption 2. Putting servers in different Availability zones provides both failover and better reliability</p> <p>Assumption 3. Access to the servers is limited according to the principle of least privilege</p> <p>Assumption 4. The bastion hosts can access all environments</p> <p>Example Corp's IT team found the new configuration not because of controls, but from the increase in their AWS bill. As a result, the security and operations teams want to validate the right security is applied to both the new and existing environments using the Inspector Network Reachability report.</p>"},{"location":"#architecture","title":"Architecture","text":"<p>You will use AWS CloudFormation to build the environment</p> <p>The CloudFormation template will build the following elements of the workshop in a single account and will not use any existing VPCs.</p> <ul> <li>Three VPCs - VPC 1, 2, and 3.  VPC 1 and VPC 2 are both peered to VPC 3.</li> <li>VPC 1 (the Web Application VPC) spans two Availability Zones each of which contains one public subnet and two private subnets.  The VPC also includes Application Load Balancers, web servers, and database servers.</li> <li>VPC 2 (the Proof of Concept VPC) spans two Availability Zones each of which contains one public subnet and one private subnet.  The VPC also includes two servers.</li> <li>VPC 3 (the Bastion VPC) spans two Availability Zones each of which has one private subnet.  The VPC also contains two bastion servers that offer SSH and RDP access to the environment.</li> </ul> <p>This environment is shown below.</p> <p></p> <p>Here are the Route Tables and Security Groups for you to review as well. Don't worry, we will also cover this with a short presentation in a bit.</p> <p></p> <p></p> <p></p>"},{"location":"#region","title":"Region","text":"<p>Please use the eu-west-1 region.</p>"},{"location":"#modules","title":"Modules","text":"<p>The workshop is broken up into the five modules below - please start with the first module:</p> <ol> <li>Environment Build and Configuration</li> <li>Running Inspector</li> <li>Evaluating Findings</li> <li>Integration and Remediation</li> <li>Cleanup</li> </ol>"},{"location":"01-environment-setup/","title":"Module 1: Environment Build and Configuration","text":"<p>In this first module you will build the environment using a CloudFormation template. As a reminder, make sure you are in the eu-west-1 region. You must also have an Amazon EC2 Key Pair in the region. If you do not, you must create an EC2 Key Pair for the instances to use.</p> <p>The CloudFormation template takes about 10 minutes to deploy in total; 5 minutes to deploy the infrastructure and an additional 5 minutes for listeners to become active on the instances.</p>"},{"location":"01-environment-setup/#deploy-the-cloudformation-template","title":"Deploy the CloudFormation template","text":"<p>Running the CloudFormation script is easy. There are specific outputs at the end of the process to help you test and validate the instances are up and keep track of instances while looking at the Inspector Report.</p> <p>Before you deploy the CloudFormation template feel free to view it here. To deploy the CloudFormation template in the eu-west-1 region and complete steps 1-4 below you can click the following button.</p> <ol> <li> <p>Make sure you are signed in into your AWS account and you are in the eu-west-1 region</p> </li> <li> <p>Go to the AWS CloudFormation console by clicking the button below EU West 1 (Ireland) </p> </li> <li> <p>Check the parameters section and select the KeyPair you created before under PassedKeyName</p> </li> <li> <p>Acknowledge the CloudFormation Template creates a user by checking the box.     </p> </li> <li> <p>Click \u201cCreate Stack\u201d</p> </li> </ol> <p>CloudFormation will now build the stack.  Wait until the status changes to CREATE_COMPLETED. You can click on Events to get updates on which resources of the stack get created and what their status is. Just hit the refresh button inside the Events view to get updates. </p> <p>After the stack build is finished, proceed to the next phase, Running Inspector.</p>"},{"location":"02-running-inspector/","title":"Module 2 - Running Inspector","text":"<p>In the previous module you created the workshop's environment including EC2 instances running various applications. In this module you will gather the information from the CloudFormation Stack and use it to validate those services are running, run Inspector and detect Network Reachability findings.</p> <p>Amazon Inspector continually scans AWS workloads for software vulnerabilities and unintended network exposure. By end of 2021 Amazon Inspector has been completely rearchitected to automate vulnerability management and deliver near real-time findings to minimize the time to discover new vulnerabilities. </p>"},{"location":"02-running-inspector/#running-inspector","title":"Running Inspector","text":"<ol> <li> <p>Refresh the CloudFormation interface until the Status shows \u201cCreate Complete\u201d</p> <p></p> </li> <li> <p>Click on the Stack Name</p> </li> <li> <p>Go to the Outputs tab of the Stack</p> <p></p> </li> <li> <p>Open the DNS names from the Output frame into a new browser tab. You can use these to validate the Web servers that should be publically accessible are.</p> <ol> <li> <p>The LoadBalancerFullDNS and PoCWebServer1PublicDNS should work.</p> </li> <li> <p>PoCWebServer2PublicDNS should time out.</p> </li> </ol> </li> <li> <p>Copy the instance ID\u2019s from the Output frame into a text editor window. These will help you when you review the Inspector report.</p> </li> <li> <p>Go to the EC2 console to validate the instances are running.</p> <p></p> </li> <li> <p>Go to the Inspector console.</p> <p>Next click on Get Started to activate Amazon Inspector for your account. Then click on Activate Inspector.</p> <p></p> <p>Activating Inspector will automatically trigger the first scan of your environment which can take a couple of minutes.</p> </li> <li> <p>You can check the Dashboard for the environment coverage. Wait until your instances are covered at 75%.</p> </li> </ol> <p>Do you have an idea why the we only have 75% of coverage for EC2 instances?</p> <p>Next let us evaluate the Findings.</p>"},{"location":"03-evaluate-findings/","title":"Module 3 - Evaluating Findings","text":"<p>In the previous module you activated Amazon Inspector. In this module you will evaluate the various findings generated by Inspector and identify potential mitigations. You will use these findings to evaluate the assumptions discussed in the start of the workshop. For reference they are:</p> <p>Assumption 1. Instances in private subnets are not accessible from the internet</p> <p>Assumption 2. Putting servers in different Availability zones provides both failover and better reliability</p> <p>Assumption 3. Access to the servers is limited according to the principle of least privilege</p> <p>Assumption 4. The bastion hosts can access all environments</p>"},{"location":"03-evaluate-findings/#evaluating-the-inspector-findings","title":"Evaluating the Inspector Findings","text":"<p>Let's look at the Inspector Network Reachability findings and see what we can learn.</p> <ol> <li> <p>Go back to the Inspector console and select Findings from the navigation bar on the left.</p> </li> <li> <p>Click on the Add Filter input field and filter for Type of NETWORK_REACHABILITY</p> <p></p> <p>To begin, you will start evaluating the higher severity findings. So let\u2019s take a look at a Medium finding first.</p> </li> <li> <p>Select the first Medium finding starting with Port 22 is reachable... by clicking the checkbox to the left of Medium</p> <p></p> <p>Our instance is reachable via SSH from the Internet. First, let's find out which instance that is. Click on the link for the Resource ID under Resource affected. Looking at the name this is our PoC Web Server in AZ2. We should not expose this via port 22 to the Internet. </p> </li> <li> <p>How to remediate? Inspector tells us at the bottom under Remediation that we can restrict the access to our instance via the Security Group or Access Control List.</p> <p>In the Open Network Paths section click on Security Group and copy the Security Group ID. Next switch to Security Groups and enter the id in the search bar.  Click on the Inbound rules which reveals that port 22 for SSH is open to the world. That means Assumption 3. Access to the servers is limited according to the principle of least privilege is wrong. This is something you would want addressed first.</p> <p>So since you know some things are wrong, let\u2019s check the other findings for this server. You do that by filtering by the instance ID.</p> </li> <li> <p>Go back to Inspector and in the Findings view add another filter for Resource ID that equals your instance id (you can copy the instance id from the first finding).          There's another finding for our WebServer instance indicating that port 443 is exposed to the internet. Given we are serving a website and this is a HTTPS port the severity is low. We could put the WebServers into private subnets and only expose the LoadBalancer into the public subnet, but let's focus on understanding the other findings as well.</p> </li> <li> <p>Going back to the Medium finding with port 22 being exposed to the internet let us check if other instances are affected by this as well. In the Findings view remove the filter for the instance id. Add a new filter for Open port from 22 to 22.</p> <p>As we can see luckily only our WebServer for AZ2 is affected.</p> </li> <li> <p>Remove the filter for the Resource ID and let's have a look at the other Medium findings. As we can see there are 2 instances with port 3306 reachable from the internet. Click on one of these findings and follow the link to the affected resource. As it turns out this is one of our database servers. Looking at the second finding with port 3306 being reachable from the internet shows that actually both our database servers are impacted by this. This is for sure a security concern, databases should reside in private subnets and not being accessible from the internet. So Assumption 1. Instances in private subnets are not accessible from the internet is broken as well. If the subnet would have been setup correctly (meaning no route to an Internet Gateway in the respective RouteTable) the assumption would have been correct.</p> </li> <li> <p>As we looked at all the Medium findings let us now investigate the others with low severity. You can add another filter for severity low.         We already looked at the finding with port 443. However, somethings seems odd about the number of findings here. We have 4 WebServers in total, 2 in prod and 2 for our PoC. On the other hand we have 3 findings for Port 80 and one for port 443 being exposed to the internet.</p> </li> <li> <p>Go to the EC2 console and filter for Web Server or simply click this link. Have a look at the Availability Zone column. We see that we have one instance of Web Server and PoC Web Server per AZ (here eu-west-1a and eu-west-1b, yours might differ).  So Assumption 2. Putting servers in different Availability zones provides both failover and better reliability seems to be valid. Is it? If there should be an event in one AZ and we want to fail over the instances have to listen on the same ports to make this work. </p> </li> <li> <p>Let's go back to the Findings view of Inspector, filtering for severity low. Three instances are listening on port 80, one on port 443 (all instances ids in column Impacted resource are different for this filter).  Therefor an failover to our PoC Web Server for AZ2 would fail, breaking assumption 2.</p> </li> <li> <p>Now what about Assumption 4. The bastion hosts can access all environments? Here we come back to our instance coverage of only 75%. In Inspector go to the dashboard and click on the blue 75%. The status column reveals that both of our Bastion hosts are unmanaged, meaning they are not scanned by Inspector. At this point we do not dive into why that is and how to fix it. We take it as a learning that there might be resources that we did not configure in a way to be included in the scans of Inspector. So in order to verify assumption 4 we will use a different tool.</p> </li> <li> <p>You might have seen the blue banner in step 4, where we investigated a security group. It tells that we can check network connectivity with the Reachability Analyzer which is part of the AWS Network Manager. Let's pay it a visit.</p> </li> <li> <p>Let us check if there is connectivity from Bastion Server for AZ1 to the Database Server for AZ1. Click on Create and analyze path. As Source type select instances and Bastion Server for AZ1. As Destination type select instances and Database Server for AZ1. Leave the rest as it is and click on Create and anapyze path. The analyzsis will take a couple of seconds.</p> </li> <li> <p>You should get a success for reachability, meaning both instances can connect. Repeat step 13, this time with Source type of Bastion Server for AZ1 and destination as PoC Web Server for AZ1</p> </li> <li> <p>This team Reachability Analyzer tells us that PoC Web Server for AZ1 is not reachable from Bastion Server for AZ1.  We could even look into the path details to find out the root cause of that connectivity failing. However, at this point let us conclude that Assumption 4. The bastion hosts can access all environments is proven wrong as well.</p> </li> </ol>"},{"location":"03-evaluate-findings/#take-aways","title":"Take Aways","text":"<p>Thanks to the Inspector and Reachability Analyzer you were able to show that all of our assumptions had problems due to misconfigurations.</p> <p>But now what? You don't want to leave these issues as they are, so let's see how to remediate them by combining other AWS tools and services. Integration and Remediation will do just that.</p>"},{"location":"04-integration-and-remediation/","title":"Module 4 - Integration and Remediation","text":"<p>In the previous module you identified issues with the network configuration. It's good to have those identified, but we should also remediate them. In this module you will leverage additional AWS services to deploy automatic remediations to known bad configurations. </p>"},{"location":"04-integration-and-remediation/#integrating-inspector-with-other-aws-security-services","title":"Integrating Inspector with other AWS Security Services","text":"<p>In order to implement automatic remediation for specific findings we need a trigger for new findings coming in. We will create a rule within Amazon EventBridge which is a service that provides real-time access to changes in data in AWS services, your own applications, and software as a service (SaaS) applications without writing code. Then you are going to use that to trigger a Lambda function to remediate one of the most critical findings we found. The CloudFormation template has deployed a Lambda function to block SSH access to misconfigured instances. Let's build the connection from EventBridge to Lambda and review the code.</p> <ol> <li> <p>Go to the Amazon EventBridge console</p> </li> <li> <p>Click on Rules on the left hand side and then on the button named Create rule</p> </li> <li> <p>Name the rule InspectorAutomation. Leave everything else as default and click on Next.</p> </li> <li> <p>Scroll down to Sample Event, go into the Dropdown and select Inspector2 Finding. Have a look at the sample event to understand the structure of such an event that EventBridge would send to our Lambda function when Inspector detects a new finding. We will parse this structure within our Lambda function.</p> <p></p> </li> <li> <p>Scroll down to the Event pattern section. Here select Inspector2 as AWS service and Inspector2 Finding as Event type.</p> <p></p> </li> <li> <p>Click Next, then on target drop down select Lambda function and the NetworkReachabilityDemo-remediation-nacl function.</p> </li> <li> <p>Click Next until your end up in the Review and create screen. Review the rule definition and finally click on Create rule.</p> <p>We've now configured EventBridge to send any findings it receives to our Lambda function. Our Lambda function is configured to only respond to specific findings in specific ways. If you're interested in reviewing the Lambda function you can go to the Lambda console. The relevant piece of code for this activity are shown below:</p> <p></p> <p>You can see here that the Lambda code adds a Network ACL line that blocks SSH from the internet to any instance that has SSH open to the internet.</p> <p>To trigger this you need to have Inspector submit a finding to EventBridge. Rather than waiting for Inspector to finish an assessment though, you can simulate this action.</p> </li> <li> <p>Go into the Lambda console and select the function NetworkReachabilityDemo-remediation-nacl. Click on the tab named Test. Select Create new event. This allows us to define an event that we want to test our Lambda function against. We will leverage our knowledge about the structure of a finding that Inspector sends via EventBridge.</p> </li> <li> <p>Let us remediate the SSH finding (including future SSH findings) as this is a critical one. Provide an Event name and copy the following JSON into the Event JSON textbox.</p> </li> </ol> <pre><code>{\n\"version\": \"0\",\n\"id\": \"c02b4335-53a3-ecf7-b4c8-0a9ffc19a8ec\",\n\"detail-type\": \"Inspector2 Finding\",\n\"source\": \"aws.inspector2\",\n\"account\": \"708704313893\",\n\"time\": \"2023-03-20T18:08:05Z\",\n\"region\": \"eu-west-1\",\n\"resources\": [\n\"i-0cc555cfcdf60a48f\"\n],\n\"detail\": {\n\"awsAccountId\": \"708704313893\",\n\"description\": \"On the instance i-0cc555cfcdf60a48f, the port range 22-22 is reachable from the InternetGateway igw-0164390e83f9a0f6b from an attached ENI eni-07db2a50cfa018a03.\",\n\"findingArn\": \"arn:aws:inspector2:eu-west-1:708704313893:finding/9abc5f3a76093eeb2ad420fdf9c011ab\",\n\"firstObservedAt\": \"Mar 20, 2023, 6:08:05 PM\",\n\"lastObservedAt\": \"Mar 20, 2023, 6:08:05 PM\",\n\"networkReachabilityDetails\": {\n\"networkPath\": {\n\"steps\": [\n{\n\"componentId\": \"igw-0164390e83f9a0f6b\",\n\"componentType\": \"AWS::EC2::InternetGateway\"\n},\n{\n\"componentId\": \"INSERT YOUR ACL ID HERE\",\n\"componentType\": \"AWS::EC2::NetworkAcl\"\n},\n{\n\"componentId\": \"sg-0f615897558ace817\",\n\"componentType\": \"AWS::EC2::SecurityGroup\"\n},\n{\n\"componentId\": \"eni-07db2a50cfa018a03\",\n\"componentType\": \"AWS::EC2::NetworkInterface\"\n},\n{\n\"componentId\": \"i-0cc555cfcdf60a48f\",\n\"componentType\": \"AWS::EC2::Instance\"\n}\n]\n},\n\"openPortRange\": {\n\"begin\": 22,\n\"end\": 22\n},\n\"protocol\": \"TCP\"\n},\n\"remediation\": {\n\"recommendation\": {\n\"text\": \"You can restrict access to your instance by modifying the Security Groups or ACLs in the network path.\"\n}\n},\n\"resources\": [\n{\n\"details\": {\n\"awsEc2Instance\": {\n\"iamInstanceProfileArn\": \"arn:aws:iam::708704313893:instance-profile/SharedServerConnectivityProfile\",\n\"imageId\": \"ami-05247819264504af0\",\n\"ipV4Addresses\": [\n\"34.245.90.167\",\n\"10.0.2.148\"\n],\n\"ipV6Addresses\": [],\n\"keyName\": \"grey\",\n\"launchedAt\": \"Mar 20, 2023, 3:25:03 PM\",\n\"platform\": \"AMAZON_LINUX_2\",\n\"subnetId\": \"subnet-07d7d49356afcf27b\",\n\"type\": \"t2.micro\",\n\"vpcId\": \"vpc-07462a62acd48e298\"\n}\n},\n\"id\": \"i-0cc555cfcdf60a48f\",\n\"partition\": \"aws\",\n\"region\": \"eu-west-1\",\n\"tags\": {\n\"NetworkReachabilityDemo\": \"True\",\n\"aws:cloudformation:stack-name\": \"network-reachability-workshop\",\n\"aws:cloudformation:stack-id\": \"arn:aws:cloudformation:eu-west-1:708704313893:stack/network-reachability-workshop/fe6c0e20-c732-11ed-8a8d-064a414836bb\",\n\"aws:cloudformation:logical-id\": \"DbServerAZ1\",\n\"Name\": \"Database Server for AZ1\"\n},\n\"type\": \"AWS_EC2_INSTANCE\"\n}\n],\n\"severity\": \"MEDIUM\",\n\"status\": \"ACTIVE\",\n\"title\": \"Port 22 is reachable from an Internet Gateway - TCP\",\n\"type\": \"NETWORK_REACHABILITY\",\n\"updatedAt\": \"Mar 20, 2023, 6:08:05 PM\"\n}\n}\n</code></pre> <ol> <li> <p>The code snippet above contains a section with INSERT YOUR ACL ID HERE in line 26. You need to replace this placeholder with the ID of the Network Access Control List that the SSH finding correlates to.</p> </li> <li> <p>Go back into Inspector into the Findings view. Select the finding with port 22. Then on the detail view go into section Open Network Paths, click on Network Acl and copy the ACL id.</p> <p></p> </li> <li> <p>Paste the id into the appropriate place in the test event in the Lambda console: replace the \"INSERT YOUR ACL ID HERE\" with your ACL id</p> <p></p> </li> <li> <p>Click on Save. We are now ready to test the automatic remediation of port 22 internet exposed findings! </p> </li> <li> <p>Go to VPC Network ACLs and click on the ACL which ID you just inserted into the test event. Click on inbound rules to the current rules. </p> </li> <li> <p>Go back to the Lambda console and click the button Test. You should now see a green box with Execution result: succeeded. If you're curious you can expand details to read the log output.</p> <p></p> <p>Optional</p> <p><p> If you have the time, you can use Reachability Analyzer to analyze connectivity from the Internet Gateway to the instance on port 22. </p></p> <p>To confirm that it worked you will check the Network ACL's.</p> </li> <li> <p>Copy the acl id from the Log output (or from the test event that you configured). Click on Services on the top right and click on VPC, then Network ACLs.</p> </li> <li> <p>Filter the network ACLs by the id you just copied. Then click on Inbound rules.</p> <p></p> <p>Do you see a rule blocking SSH? This was just created by our Lambda function.</p> <p>But if SSH is completely blocked to the instance, how can legitimate administrators configure the machine? Well, they can modify the Security Group and then the NACL through their Change Process. But if they want to make sure the instance wasn't compromised there's another option.</p> </li> <li> <p>Click on Services on the top right and click on Systems Manager, then on Sessions Manager</p> </li> <li> <p>Do you remember the instance ID with the misconfigured Security Group? If not, don't worry, it was the PoC Web Server for AZ2</p> </li> <li> <p>Click on the radio button next to the instance</p> </li> <li> <p>Click Start Session</p> <p></p> </li> <li> <p>Type \"ping 8.8.8.8\" - Are you able to ping out to the world? Hit Cntl-C when you're ready to move on.</p> </li> <li> <p>Type \"whoami\" - What user are you logged into the box as?</p> <p></p> <p>This looks just like an SSH session! Instead though, this is a proxy created by the AWS System Manager Agent installed on the AMI. With the AWS Systems Manager Session Manager feature you can create an SSH-like access to devices that don't have port 22 open at all. All that's necessary is to allow traffic to the Systems Manager Endpoint over port 443 and return traffic.</p> </li> <li> <p>When you're done, hit \"Terminate\" in the top right corner</p> </li> <li> <p>Confirm you want to terminate the session.</p> </li> </ol> <p>Challenge<p><p> If you have the time and want to have another challenge, try to fix the findings for port 3306 open to the internet. This time fix them manually. You can start with the finding in Inspector, then utilize Reachability Analyzer to find out where traffic is allowed and fix these issues. Finally rerun the reachability analysis to check, if connection from the Internet Gateway to port 3306 on the instances is still allowed. </p></p> </p> <p><p> If you made the above work and still have time, try to remediate:<ul> <li>make all WebServers listen on the same port</li> <li>Enable Bastion hosts to connect to the PoC WebServers via port 22</li></ul> </p></p> <p>So now we've learned how you can use Inspector to kick off a Lambda function and automatically remediate potentially risks configurations. Additionally, you've seen how when you isolate instances from the world, you can still use AWS services to securely access them and perform troubleshooting or incidence response.</p> <p>Attention</p> <p><p> Now since there are some instances still open to the internet and potentially vulnerable, let's clean up what's been built. </p></p> <p>Cleanup</p>"},{"location":"05-cleanup/","title":"Module 5 - Cleanup","text":"<p>Attention</p> <p><p> The following steps will help you clean up your environment. This is important because the workshop created some publicly accessible instances with vulnerabilities. </p></p> <ol> <li> <p>Delete CloudFormation Stack - In CloudFormation, click on Stacks, click the radio button next to the stack name you created for the workshop, click the Actions dropdown, and click Delete Stack.</p> </li> <li> <p>Delete EC2 Key Pair (optional) - In the EC2 Service window, click Key Pairs, click the box next to the key pair you created and click Delete.</p> </li> </ol> <p>Congratulations! You have now completed the Amazon Inspector Network Reachability Workshop.</p>"},{"location":"contribute/","title":"Contributing Guidelines","text":"<p>Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community.</p> <p>Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.</p>"},{"location":"contribute/#reporting-bugsfeature-requests","title":"Reporting Bugs/Feature Requests","text":"<p>We welcome you to use the GitHub issue tracker to report bugs or suggest features.</p> <p>When filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful:</p> <ul> <li>A reproducible test case or series of steps</li> <li>The version of our code being used</li> <li>Any modifications you've made relevant to the bug</li> <li>Anything unusual about your environment or deployment</li> </ul>"},{"location":"contribute/#contributing-via-pull-requests","title":"Contributing via Pull Requests","text":"<p>Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:</p> <ol> <li>You are working against the latest source on the master branch.</li> <li>You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.</li> <li>You open an issue to discuss any significant work - we would hate for your time to be wasted.</li> </ol> <p>To send us a pull request, please:</p> <ol> <li>Fork the repository.</li> <li>Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.</li> <li>Ensure local tests pass.</li> <li>Commit to your fork using clear commit messages.</li> <li>Send us a pull request, answering any default questions in the pull request interface.</li> <li>Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.</li> </ol> <p>GitHub provides additional document on forking a repository and creating a pull request.</p>"},{"location":"contribute/#finding-contributions-to-work-on","title":"Finding contributions to work on","text":"<p>Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.</p>"},{"location":"contribute/#code-of-conduct","title":"Code of Conduct","text":"<p>This project has adopted the Amazon Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments.</p>"},{"location":"contribute/#security-issue-notifications","title":"Security issue notifications","text":"<p>If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page. Please do not create a public github issue.</p>"},{"location":"contribute/#licensing","title":"Licensing","text":"<p>See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution.</p> <p>We may ask you to sign a Contributor License Agreement (CLA) for larger changes.</p>"},{"location":"license/","title":"License","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol>"}]}